def get_objective_function(label_model,force_balance=True,output=False,condition_size_yy_dict=None):
    if condition_size_yy_dict==None:
       condition_size_yy_dict=label_model.condition_size_yy_dict
    label_model.objective_function_dict={}
    label_model.condition_simulation_results_dict={}
    label_model.obj=0
    for condition in label_model.condition_size_yy_dict:
        label_model.condition_simulation_results_dict[condition]={}
        mz_dict={}
        if label_model.solver_flag!="success":
           return 99999999, {},{}
        label_model.objective_function_dict[condition]={}
        for emu in  label_model.experimental_dict[condition]:
            total_label=0
            size=label_model.emu_dict[emu]["size"]
            for n in label_model.experimental_dict[condition][emu]:
                mi=label_model.emu_dict[emu]["mid"][n]
                if n==0 and emu in label_model.rsm_list:
                   continue  
                if mi in label_model.size_variable_dict[size]: #Do not attempt to get simulated m0 if balance is forced
                   n_mi=label_model.size_variable_dict[size][mi]
                   sim=label_model.condition_size_yy_dict[condition][size][n_mi]
                   if emu not in label_model.condition_simulation_results_dict[condition]:
                      label_model.condition_simulation_results_dict[condition][emu]={}
                   label_model.condition_simulation_results_dict[condition][emu][n]=sim
                   total_label+=sim
            if emu in label_model.rsm_list: #TODO change it to be a property of experimental data dict
               for n in label_model.experimental_dict[condition][emu]:
                   if n>0:
                      if total_label==0:
                         label_model.condition_simulation_results_dict[condition][emu][n]=0
                      else:      
                         label_model.condition_simulation_results_dict[condition][emu][n]/=total_label  
            elif force_balance==True:
               label_model.condition_simulation_results_dict[condition][emu][0]=1-total_label
            for n in label_model.condition_simulation_results_dict[condition][emu]:
                sim=label_model.condition_simulation_results_dict[condition][emu][n]   
                exp_m=label_model.experimental_dict[condition][emu][n]["m"]
                exp_sd=label_model.experimental_dict[condition][emu][n]["sd"] 
                chi=round(pow((sim-exp_m)/exp_sd,2),3)
                if emu not in label_model.objective_function_dict[condition]:
                   label_model.objective_function_dict[condition][emu]={}
                label_model.objective_function_dict[condition][emu][n]=chi
                label_model.obj+=chi
                if output==True:
                   if emu in label_model.data_name_emu_dict:
                      name=label_model.data_name_emu_dict[emu]
                   else:
                      name=emu
                   string=name+" m"+str(n)
                   if emu in label_model.rsm_list:
                      string+="/ms"
                   string+=": "+str(sim)+" "+str(exp_m)+"+-"+str(exp_sd)+" chi:"+str(chi)
                   print string
    return label_model.obj,label_model.objective_function_dict,label_model.condition_simulation_results_dict
      
